# This workflow will build and deploy a .NET project to AWS Elastic Beanstalk
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Deploy-Production

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore LCDE_no_report.sln

    - name: Create environment file
      run: |
        echo "DB_SERVER=${{ secrets.DB_SERVER }}" >> .env
        echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
        echo "DB_USER=${{ secrets.DB_USER }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

    - name: Replace placeholders in appsettings.json
      run: |
        cat appsettings.json | envsubst > appsettings.temp.json
        mv appsettings.temp.json appsettings.json
      env:
        DB_SERVER: ${{ secrets.DB_SERVER }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    - name: Build
      run: dotnet build LCDE_no_report.sln --no-restore

    - name: Test
      run: dotnet test LCDE_no_report.sln --no-build --verbosity normal

    - name: Publish
      run: dotnet publish LCDE_no_report.sln -c Release -o ./publish

    - name: Ensure .runtimeconfig.json is included
      run: |
        if [ ! -f ./publish/*.runtimeconfig.json ]; then
          echo '{
            "runtimeOptions": {
              "tfm": "net6.0",
              "includedFrameworks": [
                {
                  "name": "Microsoft.NETCore.App",
                  "version": "6.0.30"
                },
                {
                  "name": "Microsoft.AspNetCore.App",
                  "version": "6.0.30"
                }
              ],
              "configProperties": {
                "System.GC.Server": true,
                "System.Reflection.Metadata.MetadataUpdater.IsSupported": false,
                "System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization": false
              }
            }
          }' > ./publish/LCDE.runtimeconfig.json
        fi

    - name: List files in publish directory
      run: ls -la ./publish

    - name: Compress deployment package
      run: zip -r deploy.zip ./publish

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to Elastic Beanstalk
      run: |
        aws s3 cp deploy.zip s3://elasticbeanstalk-${{ secrets.AWS_REGION }}-${{ secrets.AWS_ACCOUNT_ID }}/deploy-${{ github.sha }}.zip
        aws elasticbeanstalk create-application-version \
          --application-name ${{ secrets.AWS_EB_APPLICATION_NAME }} \
          --version-label ${{ github.sha }} \
          --source-bundle S3Bucket="elasticbeanstalk-${{ secrets.AWS_REGION }}-${{ secrets.AWS_ACCOUNT_ID }}",S3Key="deploy-${{ github.sha }}.zip"

        aws elasticbeanstalk update-environment \
          --application-name ${{ secrets.AWS_EB_APPLICATION_NAME }} \
          --environment-name ${{ secrets.AWS_EB_ENVIRONMENT_NAME }} \
          --version-label ${{ github.sha }}