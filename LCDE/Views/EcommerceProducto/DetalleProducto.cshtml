@model ProductoListarDTO
@{
    Layout = "~/Views/Shared/_layoutEcommerce.cshtml";
}
<link rel="stylesheet" href="~/css/detprod.css">

<!--================Single Product Area =================-->
<div class="container">
    <div class="row s_product_inner">
        <div class="col-lg-6">
            <div class="s_Product_carousel">
                <div class="single-prd-item my-4">
                    <img class="img-fluid" src="@Model.Image_url" width="500px"> <!--Falta la ruta de la imagen-->
                </div>
            </div>
        </div>
        <div class="col-lg-5 offset-lg-1">
            <div class="s_product_text">
                <h3>@Model.Nombre </h3>
                <h6>@Model.Detalle</h6>
                <h2>@Model.PrecioUnidad</h2>
                <ul class="list">
                    <li><a class="active" href="#"><strong><span>Categoria</span> : </strong>@Model.NombreCategoria</a></li>
                    <li><a class="active" href="#"><strong><span>Disponibilidad</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp : </strong>@Model.Existencia</a></li>
                </ul>
                <p>
                    <!--Falta la descripcion del producto-->
                </p>
                <div class="product_count">
                    <label for="qty"><b>Cantidad:</b></label>
                    <input type="number" name="qty" id="sst" min="1" max="@Model.Existencia" title="Quantity:" class="input-text qty">


                </div>
                <div class="card_area d-flex align-items-center">
                    <button class="primary-btn" onclick="addToCart(@Model.Id, document.getElementById('sst').value)">Agregar al Carrito</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!--================End Single Product Area =================-->

<script>
    function showToast(type, message, duration = 1500) {
        let toastElement, toastBodyElement;

        if (type === 'success') {
            toastElement = document.getElementById('success-toast');
            toastBodyElement = document.getElementById('success-toast-body');
        } else if (type === 'error') {
            toastElement = document.getElementById('error-toast');
            toastBodyElement = document.getElementById('error-toast-body');
        }

        if (toastElement && toastBodyElement) {
            toastBodyElement.textContent = message;
            let toast = new bootstrap.Toast(toastElement, { delay: duration });
            toast.show();
        }
    }

    function addToCart(productId, quantity) {
        quantity = parseInt(quantity, 10);

        if (isNaN(quantity) || quantity <= 0) {
            showToast('error', 'Por favor, ingrese una cantidad válida.');
            return;
        }

        let cart = JSON.parse(localStorage.getItem('shoppingCart')) || [];
        let productIndex = cart.findIndex(item => item.id === productId);

        if (productIndex !== -1) {
            let existingQuantity = parseInt(cart[productIndex].quantity, 10);
            if (isNaN(existingQuantity)) {
                existingQuantity = 0;
            }
            cart[productIndex].quantity = existingQuantity + quantity;
        } else {
            cart.push({ id: productId, quantity: quantity });
        }

        localStorage.setItem('shoppingCart', JSON.stringify(cart));

        // Disparar evento de almacenamiento local
        window.dispatchEvent(new Event('storage'));

        // Mostrar el toast de éxito
        showToast('success', 'Producto agregado al carrito.');

        // Actualizar el contador del carrito
        updateCartCount();
    }
</script>